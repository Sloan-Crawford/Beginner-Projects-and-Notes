/* 
on grid container:
first, set the container to display grid 
next, use grid-template-columns to define number and width of grid columns
can use percent and it can go over 100% to overflow (but don't)
most commonly, use fractions!
use repeat function: repeat(# of times, # of fractions)
then, use gap to create gap between grid items
for height, use grid-auto-rows: minmax(min, max)
can combine grid-template-columns with grid-template-rows, though not really used that way
mostly let content define the height and align with alignment properties
align-items - stretch (default), top, center, end
justify-content - stretch (default), start, center, end, space-around, space-between

on grid items:
align-self
justify-self
grid-column: 1 / 3;       --sets item to start at column 1 and end at column 3
grid-column: 1 / span 2;  --does the same thing
*/

/* 
use media-queries for responsiveness. also use this advanced technique:
grid-template-columns: repeat(auto-fill, minmax (200px, 1fr));
that would reduce and grow the number of columns based on wheter each item can be at least 200px
*/

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  font-family: 'Open Sans', sans-serif;
  font-size: 16px;
  line-height: 1.5;
  color: #333;
  background: #f5f5f5;
}

.container {
  max-width: 960px;
  margin: 6.5rem auto;
  padding: 0.75rem;
  border: 3px solid #333;
  display: grid; /* 1 */
  /* grid-template-columns: 100px 200px; */
  /* grid-template-columns: 30% 40% 50%; */
  /* grid-template-columns: 1fr 1fr; */
  grid-template-columns: repeat(3, 1fr);
  /* column-gap: 0.5rem; */
  /* row-gap: 0.5rem; */
  gap: 0.5rem;
  /* grid-auto-rows: minmax(6rem, auto); */
  /* align-items: start; */
  /* justify-content: space-around; */
}

.item {
  background: steelblue;
  color: #fff;
  font-size: 1.2rem;
  padding: 1.2rem;
  border: 1px solid skyblue;
}

.item:nth-of-type(2) {
  height: 100px;
  width: 100px;
  align-self: end;
}

.item:nth-of-type(1) {
  background: black;
  /* grid-column-start: 1; */
  /* grid-column-end: 3; */
  /* grid-column: 1/3; */
  grid-column: 1 / span 2;
}

.item:nth-of-type(3) {
  background-color: lightsalmon;
  grid-row: 2 / 4;
}
